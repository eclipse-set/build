# This workflow will create a new release branch

name: Release Branch
    
on:
  workflow_call:
    inputs:
      version:
        description: 'Release version. Format: <major>.<minor>'
        type: string
        required: true
      development-version:
        description: 'Next release version: Format: <major>.<minor>. Default is next minor version'
        type: string
        required: false
      target:
        description: 'Path to target platform'
        type: string
        required: true
      pom:
        description: 'Path to pom.xml. Defaults to pom.xml in working directory'
        type: string
        required: false
        default: 'pom.xml'

jobs:
  release-branch:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - name: Fail if branch is not main
      if: github.ref != 'refs/heads/main'
      run: |
        echo "This workflow should not be triggered on a branch other than main"
        exit 1
        
    - name: Validate version format
      run: echo '${{ inputs.version }}' | grep -P '^\d+\.\d+$'
      
    - uses: actions/checkout@v5
      with:
        token: ${{ secrets.GH_BOT_TOKEN != null && secrets.GH_BOT_TOKEN || github.token }}
     
    - name: Push to Github
      run: |
        git config user.name 'eclipse-set-bot'
        git config user.email 'set-bot@eclipse.org'
        git status
        git branch -D release/${{ inputs.version }} || true
        git checkout -b release/${{ inputs.version }}
        git status
        git add -A
        git commit --allow-empty -m "Create release branch for ${{ inputs.version }}" 
        git status
        git push -f -u origin release/${{ inputs.version }}
        git status
  
  prepare-development-version:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - name: Fail if branch is not main
      if: github.ref != 'refs/heads/main'
      run: |
        echo "This workflow should not be triggered on a branch other than main"
        exit 1

    - name: Validate version format
      if: ${{ inputs.development-version }}
      run: echo '${{ inputs.version }}' | grep -P '^\d+\.\d+$'

    - name: Compute new version
      id: compute-new-version
      run: |
        VERSION=${{ inputs.version }}
        IFS ='.' read -r MAJOR MINOR
        NEW_VERSION="$MAJOR.$((MINOR + 1))"
        echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Bump versions
      uses: eclipse-set/build/.github/actions/set-version@main
      with:
        version: ${{ steps.compute-new-version.outputs.new }}.0-SNAPSHOT
        target: ${{ inputs.target }}
        pom: ${{ inputs.pom }}

    - name: Push to Github
      run: |
        git config user.name 'eclipse-set-bot'
        git config user.email 'set-bot@eclipse.org'
        git status
        git add -A
        git commit --allow-empty -m "Prepare development branch for ${{ steps.compute-new-version.outputs.new }}" 
        git status
        git push || true
        git status
    

    
