# *************************************************************************
# * Copyright (c) 2022, 2023 Hannes Wellmann and others.
# *
# * This program and the accompanying materials are made available under
# * the terms of the Eclipse Public License 2.0 which accompanies this
# * distribution, and is available at https://www.eclipse.org/legal/epl-2.0
# *
# * SPDX-License-Identifier: EPL-2.0
# *      Hannes Wellmann - initial API and implementation
# *************************************************************************
# Adapted from https://github.com/eclipse/dash-licenses/blob/master/.github/actions/maven-license-check-action/action.yml
# for usage in Eclipse SET

name: 'Check license vetting status'
description: 'Checks if the licenses of all dependencies are vetted and requests a review in case required and wanted'
inputs:
  request-review:
    description: ''
    required: false
  project-id:
    description: ''
    required: false
  pom:
    description: 'pom.xml path'
    required: false
    default: 'pom.xml'
outputs:
  licenses-vetted: 
    description: "True if all licenses are vetted, else false"
    value: ${{ steps.license-check-with-review-request.outputs.build-succeeded }}
runs:
  using: "composite"
  steps:
    - name: Setup Java
      uses: eclipse-set/build/.github/actions/setup-java@main

    - name: Process maven dependencies
      shell: bash
      run: mvn -f ${{ inputs.pom }} -U -B -ntp -Dtycho.target.eager=true dependency:list -DappendOutput=true -DoutputFile=${{ github.workspace }}/maven.deps
      env:
        GITHUB_TOKEN: ${{ github.token }}
      
    - id: license-check-with-review-request
      shell: bash {0} # do not fail-fast
      run: |
        wget -nv -O ../dash.jar "https://repo.eclipse.org/service/local/artifact/maven/redirect?r=dash-licenses&g=org.eclipse.dash&a=org.eclipse.dash.licenses&v=LATEST"
        if [[ ${{ inputs.project-id }} != "" ]]; then
          dashArgs+=" -project ${{ inputs.project-id }}"
        fi
        if [ ${{ inputs.request-review }} ]; then
          java -jar ../dash.jar ${dashArgs} -summary DEPENDENCIES -review -token $GITLAB_API_TOKEN $(find . '(' -name "*.deps" -o -name "package-lock.json" ')' -type f -exec sh -c 'echo "$0"' {} \;)
          if [[ $? == 0 ]]; then # All licenses are vetted
            echo "build-succeeded=1" >> $GITHUB_OUTPUT
          else
            echo "build-succeeded=0" >> $GITHUB_OUTPUT
          fi
        else
          java -jar ../dash.jar ${dashArgs} -summary DEPENDENCIES $(find . '(' -name "*.deps" -o -name "package-lock.json" ')' -type f -exec sh -c 'echo "$0"' {} \;)
          if [[ $? == 0 ]]; then # All licenses are vetted
            echo "build-succeeded=1" >> $GITHUB_OUTPUT
          else
            echo "build-succeeded=0" >> $GITHUB_OUTPUT
          fi
        fi
